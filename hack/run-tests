#!/bin/bash
set -e
BASE_PATH=$(cd $(dirname $BASH_SOURCE)/..; pwd)
source $BASE_PATH/hack/message_printing.sh

usage() {
  echo "Usage:"
  echo "run-tests               --- run all the tests"
  echo "run-tests -i            --- run integration tests only"
  echo "run-tests -p <Path>     --- only run tests in the givel path"
  echo "run-tests -n            --- run tests locally, not through Docker"
  echo "run-tests -d            --- debug mode"
  echo "run-tests -h            --- print help menu"
}

run_tests_with_docker() {
  cmd="docker run"
  cmd=$cmd" -v $BASE_PATH:/go/src/github.com/ice-stuff/ice-agent"
  cmd=$cmd" -w /go/src/github.com/ice-stuff/ice-agent"
  cmd=$cmd" -u ice"
  cmd=$cmd" --name ice-agent-test"
  cmd=$cmd" --rm"
  cmd=$cmd" glestaris/ice-agent-ci"
  cmd=$cmd" ./hack/run-tests $ARGS -n"

  debug "About to run '$cmd'"
  debug "--------- Docker output START ---------"

  set +e
  eval $cmd
  GOTEST_EXIT_CODE=$?
  set -e

  debug "--------- Docker output END ---------"
  info "Docker exited with code $GOTEST_EXIT_CODE"
}

run_native_tests() {
  if [ $INTEGRATION_ONLY -eq 1 ]; then
    run_integration_tests
  else
    run_unit_tests
  fi
}

run_integration_tests() {
  info "Building ice-agent..."
  make clean
  make

  cmd="bats"
  cmd=$cmd" --tap"
  if [ "$TEST_PATH" != "" ]; then
    cmd=$cmd" $TEST_PATH"
  else
    cmd=$cmd" $BASE_PATH/testing/integration/*.bats"
  fi

  debug "About to run '$cmd'"
  info "--------- BATS output START ---------"

  set +e
  eval $cmd
  GOTEST_EXIT_CODE=$?
  set -e

  info "--------- BATS output END ---------"
  info "BATS exited with code $GOTEST_EXIT_CODE"
}

run_unit_tests() {
  gopath=$(mktemp -d)
  repo_path=$gopath/src/github.com/ice-stuff/ice-agent

  mkdir -p $(dirname $repo_path)
  ln -s $PWD $repo_path

  cmd="go test"
  if [ "$TEST_PATH" != "" ]; then
    cmd=$cmd" $TEST_PATH"
  else
    cmd=$cmd" \$(go list ./... | grep -v vendor)"
  fi

  [ -z $GOROOT ] && export GOROOT=/usr/local/go
  export GOPATH=$gopath
  export PATH=$PATH:$GOROOT/bin

  cd $repo_path
  debug "About to run '$cmd' in directory '$repo_path'"
  info "--------- go test output START ---------"

  set +e
  eval $cmd
  GOTEST_EXIT_CODE=$?
  set -e

  info "--------- go test output END ---------"
  info "go test exited with code $GOTEST_EXIT_CODE"

  cd /
  rm -rf $gopath
}

run_tests() {
  if [ $NATIVE -eq 0 ]; then
    run_tests_with_docker
    return
  fi

  run_native_tests
}

ARGS=$@
TEST_PATH=""
INTEGRATION_ONLY=0
NATIVE=0
while getopts "p:indh" OPTION
do
  case $OPTION in
    p)
      TEST_PATH=$OPTARG
      ;;
    i)
      INTEGRATION_ONLY=1
      ;;
    n)
      NATIVE=1
      ;;
    d)
      DEBUG=1
      ;;
    h)
      usage
      exit
      ;;
    *)
      usage
      exit
      ;;
  esac
done

debug "test_path='$TEST_PATH'"
debug "integration_only=$INTEGRATION_ONLY"
debug "native=$NATIVE"
debug "debug=$DEBUG"

# some action...
run_tests

exit $GOTEST_EXIT_CODE
